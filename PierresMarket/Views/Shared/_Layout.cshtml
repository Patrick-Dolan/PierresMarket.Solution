@using Microsoft.AspNetCore.Identity
@using PierresMarket.Models
@inject SignInManager<ApplicationUser> signInManager;
@inject UserManager<ApplicationUser> userManager

@{
  string pageName = ViewContext.RouteData.Values["controller"].ToString();
  string ProfilePicture = null;
  if (signInManager.IsSignedIn(User))
  {
    Task<ApplicationUser> GetCurrentUserAsync() => userManager.GetUserAsync(User);
    var user = await GetCurrentUserAsync();
    ProfilePicture = user.ImageName; 
  }
}

<!DOCTYPE html>
<html>
  <head runat="server">
    <meta charset="utf-8">
    <title>@pageName</title>
    <link rel="icon" type="image/x-icon" href="~/img/favicon.png">
    <link rel="stylesheet" href="~/css/bootstrap.css">
    <link rel="stylesheet" href="~/css/styles.css">
  </head>
  <body class="d-flex flex-column min-vh-100">
    <!-- Navbar -->
    <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-3">
      <!-- Container wrapper -->
      <div class="container">
        <!-- Toggle button -->
        <button class="navbar-toggler mb-3" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
          </button>

        <!-- Collapsible wrapper -->
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <!-- Navbar brand -->
          <a href='@Url.Action("Index", "Home")' class='navbar-brand @(pageName == "Home" ? "active" : "")'>
            <img src="~/img/favicon.png" alt="" width="30" height="30" class="d-inline-block align-text-top">
            <span class="align-middle">Pierre's Market</span>
          </a>
          <!-- Left links -->
          <ul class="navbar-nav me-auto mb-2 mb-lg-0">
            <li class="nav-item">
                <a href='@Url.Action("Index", "Home")' class='nav-link @(pageName == "Home" ? "active" : "")'>Home</a>
            </li>
            <li class="nav-item">
                <a href='@Url.Action("Index", "Treats")' class='nav-link @(pageName == "Treats" ? "active" : "")'>Treats</a>
            </li>
            <li class="nav-item">
                <a href='@Url.Action("Index", "Flavors")' class='nav-link @(pageName == "Flavors" ? "active" : "")'>Flavors</a>
            </li>
          </ul>
          <!-- Left links -->
        </div>
        <!-- Collapsible wrapper -->

        <!-- Right elements -->
        <div class="d-flex align-items-center">
          <!-- Avatar -->
          <div class="dropdown">
            @if(User.Identity.IsAuthenticated)
            {
              if (ProfilePicture != null)
              {
                <a class='nav-link data-toggle @(pageName == "Account" ? "active" : "")' data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">
                  <button class="btn btn-primary">
                    <img src='@Url.Content("~/img/ProfilePictures/" + ProfilePicture)' id="navbar-pfp" class="rounded" alt="Default profile image." height="30">
                    @User.Identity.Name
                  </button>
                </a>
              }
              else
              {
                <a class='nav-link data-toggle @(pageName == "Account" ? "active" : "")' data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">
                  <button class="btn btn-primary">
                    <img src="~/img/DefaultUserPFP.png" id="navbar-pfp" class="rounded" alt="Default profile image." height="30">
                    @User.Identity.Name
                  </button>
                </a>
              }
            }
            else
            {
              <a class='nav-link data-toggle @(pageName == "Account" ? "active" : "")' data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">
                <button class="btn btn-primary">Account</button>
              </a>
            }
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="navbarDropdownMenuAvatar">
              @if (!User.Identity.IsAuthenticated)
              {
                <li><a class="dropdown-item" href='@Url.Action("Register", "Account")'>Register account</a></li>
                <li><a class="dropdown-item" href='@Url.Action("Login", "Account")'>Login</a></li>
              }
              else
              {
                <li><a class="dropdown-item" href='@Url.Action("Index", "Account")'>My account</a></li>
                <li><hr class="dropdown-divider"></li>
                <li>
                  @using (Html.BeginForm("LogOff", "Account"))
                  {
                    <button type="submit" class="btn btn-block dropdown-item text-danger">Log out</button>
                  }
                </li>
              }
            </ul>
          </div>
        </div>
        <!-- Right elements -->
      </div>
      <!-- Container wrapper -->
    </nav>
    <div class="container">
      @RenderBody()
    </div>
    <footer class="footer mt-auto py-1 bg-dark text-white text-center bottom-0">
      <div class="container">
        <p>&copy; 2022 - <a href="https://github.com/Patrick-Dolan/" class="text-white" target="_blank">Patrick Dolan</a> - <a href="https://github.com/Patrick-Dolan/PierresMarket.Solution" class="text-white" target="_blank">Github Link</a></p>
      </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
  </body>
</html>